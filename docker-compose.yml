version: "3.5"
services:
  flask:
    image: "python:${PYTHON_TAG}"
    container_name: "${PROJECT_NAME}_flask"
    hostname: flask
    stop_grace_period: 60s
    restart: always
    environment:
      FLASK_APP: "app.py"
      FLASK_HOST: "0.0.0.0"
      FLASK_PORT: "5000"
    ports:
      - "${FLASK_PORT}:5000"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    build: 
      dockerfile: Dockerfile
      context: ./server
      args:
        PYTHON_TAG: $PYTHON_TAG
    command: gunicorn app:app -w 2 --threads 2 -b :5000 --reload --access-logfile -
    volumes:  
      - ./server:/app

  nginx:
    image: "nginx:${NGINX_TAG}"
    container_name: "${PROJECT_NAME}_nginx"
    hostname: nginx
    stop_grace_period: 60s
    restart: always
    depends_on:
      - flask
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./server:/var/www/html
      - ./services/nginx/conf.d:/etc/nginx/conf.d

  redis:
    image: "redis:${REDIS_TAG}"
    container_name: "${PROJECT_NAME}_redis"
    stop_grace_period: 60s
    hostname: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  portainer:
    image: "portainer/portainer:${PORTAINER_TAG}"
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    hostname: portainer
    stop_grace_period: 60s
    restart: always
    ports:
      - "${PORTAINER_PORT}:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
     
networks:
  default:
      name: dolphin_segmentation      
